name: Version Updater #Nome do Workflow
run-name: ${{ github.actor }} is Update Version with GitHub Actions ğŸš€ #Nome que serÃ¡ exibido na execuÃ§Ã£o do workflow
on: [ workflow_dispatch ] #Define que o workflow serÃ¡ executado quando um push for feito

jobs:
  #Define os tarefas que serÃ£o executados
  Update-Version:
    #Define o nome da tarefa dentro do workflow
    runs-on: ubuntu-latest #Define qual sistema operacional a mÃ¡quina que o workflow serÃ¡ executado
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
    #Define as etapas do workflow

    # name: Usado para dar um nome descritivo a uma etapa.
    # run: Usado para um ou mais comandos no ambiente de execuÃ§Ã£o do workflow
    # uses: Permite que vocÃª utilize aÃ§Ãµes predefinidas fornecidas pela comunidade do GitHub.
    # with: Usado para fornecer argumentos ou parÃ¢metros para as aÃ§Ãµes.
    # if: Usado para executar uma aÃ§Ã£o se uma condiÃ§Ã£o estiver atendida.
    # env: Permite que vocÃª defina variÃ¡veis de ambiente especÃ­ficas para uma etapa.
    # continue-on-error: Permite que vocÃª especifique se uma etapa deve continuar mesmo se houver erros.
    # timeout-minutes: Permite que vocÃª defina um limite de tempo para a execuÃ§Ã£o de uma etapa.
    # timeout-seconds: Permite que vocÃª defina um limite de tempo para a execuÃ§Ã£o de uma etapa.
    # timeout-hours: Permite que vocÃª defina um limite de tempo para a execuÃ§Ã£o de uma etapa.
    # working-directory: Permite que vocÃª execute comandos em um diretÃ³rio de trabalho especÃ­fico.
    # matrix: Permite criar matrizes de configuraÃ§Ã£o para executar a mesma etapa com vÃ¡rias combinaÃ§Ãµes de valores.
    # needs: Permite que uma etapa dependa da conclusÃ£o de uma ou mais etapas anteriores.
    # shell: Permite que vocÃª especifique o interpretador de shell a ser usado ao executar comandos.  

    - run: gh api repos/{owner}/{repo}/releases/latest
